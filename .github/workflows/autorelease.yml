name: Auto Release

on:
  push:
    branches:
      - "master"
  workflow_dispatch:
    inputs:
      bump-version:
        description: 'Automatically increase patch version (true|false)'
        default: 'true'
        required: false

env:
  VERSION_FILE: oelint_adv/version.py
  MODULE_CODE: oelint_adv/*
  PYPI_PUBLISH: 1

jobs:
  release:

    runs-on: ubuntu-latest
    if: github.repository == 'priv-kweihmann/oelint-adv'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Sanity checks
      run: |
        if [ "${{ env.PYPI_PUBLISH }}" = "1" ] && [ -z "${{ secrets.PYPI_API_TOKEN }}" ]; then
          echo "::error ::secrets.PYPI_API_TOKEN needs to be set for this action"
          exit 1
        fi
        if [ -z "${{ secrets.TOKEN }}" ]; then
          echo "::error ::secrets.TOKEN needs to be set for this action"
          exit 1
        fi        

    - name: Check if relevant for release
      uses: dorny/paths-filter@v2.11.1
      id: code-changes
      with:
        filters: |
          relevant-for-release:
            - 'requirements.txt'
            - ${{ env.MODULE_CODE }}'
          manual-bumped-version:
            - '.bumpversion'

    - name: Check if we need to release
      id: release-needed
      run: |
        do_release=0
        do_bump=0
        [ "${{ steps.code-changes.outputs.relevant-for-release == 'true' }}" = "true" ] && do_release=1
        [ "${{ steps.code-changes.outputs.manual-bumped-version != 'true' }}" = "true" ] && [ $do_release -eq 1 ] && do_bump=1
        if [ "${{ github.event_name == 'workflow_dispatch' }}" = "true" ]; then
          do_release=1
          [ "${{ github.inputs.bump-version }}" = "true" ] && do_bump=1
        fi

        if [ $do_bump -eq 1 ]; then
          echo DO_BUMP=true >> $GITHUB_OUTPUT
        else
          echo DO_BUMP=false >> $GITHUB_OUTPUT
        fi

        if [ $do_release -eq 1 ] || [ $do_bump -eq 1 ]; then
          echo DO_RELEASE=true >> $GITHUB_OUTPUT
        else
          echo DO_RELEASE=false >> $GITHUB_OUTPUT
        fi
    
    - name: Install dependencies
      if: steps.release-needed.outputs.DO_RELEASE == 'true'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Bump version
      id: version-bump
      if: steps.release-needed.outputs.DO_BUMP == 'true'
      run: |
        pip install -r requirements-dev.txt
        bump2version --list patch ${{ env.VERSION_FILE }} >> $GITHUB_OUTPUT
      
    - name: Build
      if: steps.release-needed.outputs.DO_RELEASE == 'true'
      run: |
        python3 setup.py build sdist bdist_wheel --universal

    - name: Commit new version
      if: steps.release-needed.outputs.DO_BUMP == 'true'
      uses: actions-x/commit@v6
      with:
        message: 'Release ${{ steps.version-bump.outputs.new_version }}'

    - name: Create new release
      if: steps.release-needed.outputs.DO_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        tag: ${{ steps.version-bump.outputs.new_version }}
        generateReleaseNotes: true
        token: ${{ secrets.TOKEN }}
  
    - name: Publish package
      if: steps.release-needed.outputs.DO_RELEASE == 'true' && env.PYPI_PUBLISH == '1'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
